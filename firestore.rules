rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Enhanced helper functions with proper role validation
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isNotLocked() {
      return !exists(/databases/$(database)/documents/users/$(request.auth.uid)) ||
             !get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('lockedUntil', null) ||
             timestamp.date(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.lockedUntil) < timestamp.date(request.time);
    }

    function hasRole(roleIndex) {
      return isAuthenticated() &&
            isNotLocked() &&
            exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == roleIndex;
    }

    function isAdmin() {
      return hasRole(2); // admin role is index 2
    }

    function isShopOwner() {
      return hasRole(1); // shopOwner role is index 1
    }

    function isEmployee() {
      return hasRole(4) || hasRole(5) || hasRole(6) || hasRole(7) || hasRole(8); // employee roles
    }

    function isCustomer() {
      return hasRole(0); // customer role is index 0
    }

    function hasAnyRole() {
      return isAdmin() || isShopOwner() || isEmployee() || isCustomer();
    }

    function isVerified() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isEmailVerified', false) == true;
    }

    function isActiveAccount() {
      return isAuthenticated() &&
             isNotLocked() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    // Users collection - allow read/write for authenticated users and creation for initial setup
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isAdmin() || isShopOwner();
      allow create: if true; // Allow demo account creation during development
      allow read: if true; // Allow all users to read profiles during development
    }

    // Customers collection
    match /customers/{customerId} {
      allow read, write: if hasAnyRole();
      allow read, write: if isAuthenticated() && isOwner(customerId);
    }

    // Orders collection
    match /orders/{orderId} {
      allow read, write: if hasAnyRole();
      allow read, write: if isAuthenticated() && isOwner(resource.data.customerId);
    }

    // Products collection
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin() || isShopOwner();
    }

    // Measurements collection
    match /measurements/{measurementId} {
      allow read, write: if hasAnyRole();
      allow read, write: if isAuthenticated() && isOwner(resource.data.customerId);
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read, write: if hasAnyRole();
      allow read, write: if isAuthenticated() && isOwner(notificationId);
    }

    // Chat collection
    match /chat/{conversationId}/{document=**} {
      allow read, write: if isAuthenticated();
      allow read, write: if hasAnyRole();
    }

    // Services collection
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin() || isShopOwner();
    }

    // Employees collection
    match /employees/{employeeId} {
      allow read, write: if hasAnyRole();
      allow read, write: if isAuthenticated() && isOwner(employeeId);
    }

    // Work assignments collection
    match /work_assignments/{assignmentId} {
      allow read, write: if hasAnyRole();
    }

    // Categories collection
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin() || isShopOwner();
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if isAuthenticated() && isOwner(resource.data.customerId);
      allow write: if hasAnyRole();
    }

    // Wishlist collection
    match /wishlists/{wishlistId} {
      allow read, write: if isAuthenticated() && isOwner(wishlistId);
    }

    // Cart collection
    match /cart/{cartId} {
      allow read, write: if isAuthenticated() && isOwner(cartId);
    }

    // Allow all operations for test collection during development
    match /test/{document=**} {
      allow read, write: if true;
    }
  }
}
